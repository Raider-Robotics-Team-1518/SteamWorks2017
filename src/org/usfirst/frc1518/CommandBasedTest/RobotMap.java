// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1518.CommandBasedTest;




import edu.wpi.first.wpilibj.ADXL345_SPI;
import edu.wpi.first.wpilibj.ADXRS450_Gyro;
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CANSpeedController;
import org.usfirst.frc1518.CommandBasedTest.subsystems.DriveTrain;
import edu.wpi.first.wpilibj.TalonSRX;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.interfaces.Gyro;

import com.ctre.CANTalon;
import com.ctre.CANTalon.FeedbackDevice;

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalOutput;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.SPI;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.Talon;


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
//import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	public static CANTalon driveTrainFrontLeftWheel;
	public static CANTalon driveTrainFrontRightWheel;
	public static CANTalon driveTrainRearLeftWheel;
	public static CANTalon driveTrainRearRightWheel; 
	public static Encoder frontLeftEnc;
	public static CANTalon shooterMotor;
	public static Servo servo1;
	public static Servo servo2;
	public static VictorSP intakeMotor;
	public static CANTalon feedMotor1;
	public static CANTalon feedSpare1;
	public static VictorSP shootAgitator;
	public static CANTalon lift;
	public static Solenoid testSolenoid;
	public static Solenoid testSolenoid1;
	public static Talon pwmDriveFL;
	public static Talon pwmDriveRL;
	public static Talon pwmDriveFR;
	public static Talon pwmDriveRR;
	public static Talon pwmShooter;
	public static Talon pwmFeeder;
	public static Talon pwmIntake;
	public static DigitalOutput dio8;
	public static DigitalOutput dio9; 
	public static Gyro rioGyro;
	public static VictorSP pwmLift;
	//public static Talon pwmWinch;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        //Real bot drive motors
    	driveTrainFrontLeftWheel = new CANTalon(4);
    	driveTrainFrontRightWheel = new CANTalon(1);
    	driveTrainRearLeftWheel = new CANTalon(3);
    	driveTrainRearRightWheel = new CANTalon(2);
    	// Set Follower Mode on rear motors
    	//driveTrainRearLeftWheel.changeControlMode(CANTalon.TalonControlMode.Follower);
    	//driveTrainRearLeftWheel.set(4);
    	//driveTrainRearRightWheel.changeControlMode(CANTalon.TalonControlMode.Follower);
    	//driveTrainRearRightWheel.set(1);
    	//frontLeftEnc = new Encoder(10, 11, false, Encoder.EncodingType.k1X);
    	//Shooter subsystem
    	shooterMotor = new CANTalon(6);
    	shootAgitator = new VictorSP(7);
    	intakeMotor = new VictorSP(2);
    	feedMotor1 = new CANTalon(8);
    	feedSpare1 = new CANTalon(5);
    	lift = new CANTalon(9);
    	//Testbot drive motor setup.
    	//pwmDriveFL = new Talon(5);
    	//pwmDriveRL = new Talon(4);
    	//pwmDriveFR = new Talon(2);
    	//pwmDriveRR = new Talon(3);
    	//pwmShooter = new Talon(7);
    	pwmFeeder = new Talon(8);
    	//pwmWinch = new Talon(9);
    	//pwmIntake = new Talon(3);
    	servo1 = new Servo(0);
    	servo2 = new Servo(1);
    	//Redundant pneumatics code.
    	Compressor c = new Compressor(0);
    	c.setClosedLoopControl(true);
    	testSolenoid = new Solenoid(0);
    	testSolenoid1 = new Solenoid(2);
    	//Digital outputs for LEDs.
    	dio8 = new DigitalOutput(8);
    	dio9 = new DigitalOutput(9);
    	pwmLift = new VictorSP(9);
    	//Motor setup
    	//driveTrainFrontLeftWheel.setInverted(true);
    	//driveTrainFrontRightWheel.setInverted(true);
    	//driveTrainRearLeftWheel.setInverted(true);
    	//driveTrainRearRightWheel.setInverted(true);
    	driveTrainFrontLeftWheel.enableBrakeMode(false);
    	driveTrainFrontRightWheel.enableBrakeMode(false);
    	driveTrainRearLeftWheel.enableBrakeMode(false);
    	driveTrainRearRightWheel.enableBrakeMode(false);
    	//Encoders
    	driveTrainRearLeftWheel.setFeedbackDevice(FeedbackDevice.QuadEncoder);
		driveTrainFrontRightWheel.setFeedbackDevice(FeedbackDevice.QuadEncoder);
		//Gyro 
		rioGyro = new ADXRS450_Gyro();
		//Testbot motor setup.
    	//pwmDriveFL.setInverted(true);
    	//pwmDriveRL.setInverted(true);
    	//pwmDriveFR.setInverted(true);
    	//pwmDriveRR.setInverted(true);
    	
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
