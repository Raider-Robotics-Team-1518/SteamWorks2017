// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1518.CommandBasedTest;

import org.usfirst.frc1518.CommandBasedTest.commands.*;
import edu.wpi.first.wpilibj.GenericHID;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 * 
 * Mapping buttons - 
 * 	Shooting - Right Trigger
 * 	Intake - Left Trigger
 *  Climb - Left Thumb Low (2)
 *  Unjam - Right Thumb Low (2)
 *  Servos - Right Thumb High (3)
 *  Reverse Controls - Left Thumb High (3)
 */
public class OI {

public static Joystick mainstick;
public static Joystick leftJoystick;
public static JoystickButton sideButton;
public static JoystickButton trigger;
public static JoystickButton feed;
public static JoystickButton pShoot;
public static JoystickButton solenoid;
public static JoystickButton solenoid1;
public static JoystickButton reverseDrive;
public static JoystickButton winch;
public static JoystickButton intake;
public static JoystickButton lift;
public static JoystickButton servoCycle;
public static JoystickButton rabbitIntake;
public static JoystickButton unstick;
public static JoystickButton turbo;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    	mainstick = new Joystick(0);  //RIGHT
    	leftJoystick = new Joystick(1);  //LEFT
    	trigger = new JoystickButton(mainstick, 1);
    	trigger.whileHeld(new Shoot());
    	reverseDrive = new JoystickButton(mainstick, 7);
    	reverseDrive.whenPressed(new ReverseDrive());
    	intake = new JoystickButton(mainstick, 4);   //????
    	intake.whileHeld(new Feed());
    	lift = new JoystickButton(mainstick, 11);
    	lift.whileHeld(new Lift());
    	unstick = new JoystickButton(mainstick, 3);    //?????
    	unstick.whileHeld(new Unstick());
    	servoCycle = new JoystickButton(mainstick, 2);
    	servoCycle.whenPressed(new ExtendServo());
    	turbo = new JoystickButton(mainstick, 5);
    	turbo.whileHeld(new Turbo());
    	
    	//sideButton = new JoystickButton(mainstick, 3);
    	//sideButton.whileHeld(new ExtendServo());
    	//feed = new JoystickButton(mainstick, 5);
    	//feed.whileHeld(new Feed());
    	//pShoot = new JoystickButton(mainstick, 6);
    	//pShoot.whileHeld(new PShoot());
    	//solenoid = new JoystickButton(mainstick, 4);
    	//solenoid.whenPressed(new ExtendSolenoid());
    	//solenoid1 = new JoystickButton(mainstick, 3);
    	//solenoid1.whenPressed(new ExtendSolenoid1());
    	//rabbitIntake = new JoystickButton(mainstick, 4);
    	//rabbitIntake.whileHeld(new RIntake());
    	//winch = new JoystickButton(mainstick, 11);
    	//winch.whenPressed(new Winch());
    	//sideButton.whenPressed(new RetractServo());
    	
    	// SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new Auto1());
        Robot.feedSpeed = mainstick.getThrottle();

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    
    
}

